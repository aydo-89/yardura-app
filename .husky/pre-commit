#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Secret scanning - prevent committing sensitive keys
echo "üîç Scanning for secrets in staged files..."

# Check for common secret patterns in staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

for file in $STAGED_FILES; do
  if [ -f "$file" ]; then
    # Check for Stripe keys
    if grep -q "sk_live_\|sk_test_\|pk_live_\|pk_test_" "$file"; then
      echo "‚ùå ERROR: Found Stripe key in $file"
      echo "   Remove the Stripe key before committing"
      exit 1
    fi

    # Check for Stripe webhook secrets
    if grep -q "whsec_" "$file"; then
      echo "‚ùå ERROR: Found Stripe webhook secret in $file"
      echo "   Remove the webhook secret before committing"
      exit 1
    fi

    # Check for NextAuth secret
    if grep -q "NEXTAUTH_SECRET" "$file"; then
      echo "‚ùå ERROR: Found NEXTAUTH_SECRET in $file"
      echo "   Remove the NextAuth secret before committing"
      exit 1
    fi

    # Check for Google OAuth secrets
    if grep -q "AIza\|GOCSPX" "$file"; then
      echo "‚ùå ERROR: Found Google OAuth secret in $file"
      echo "   Remove the Google OAuth secret before committing"
      exit 1
    fi

    # Check for database URLs with credentials
    if grep -q "postgresql://.*:.*@" "$file" || grep -q "mysql://.*:.*@" "$file"; then
      echo "‚ùå ERROR: Found database URL with credentials in $file"
      echo "   Remove database credentials before committing"
      exit 1
    fi
  fi
done

echo "‚úÖ No secrets found in staged files"

# Run lint-staged
npx lint-staged